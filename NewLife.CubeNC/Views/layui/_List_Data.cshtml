@using NewLife;
@using NewLife.Web;
@using XCode;
@using XCode.Configuration;
@{
    var fact = ViewBag.Factory as IEntityFactory;
    var page = ViewBag.Page as Pager;
    var fields = ViewBag.Fields as FieldCollection;
    var ukey = fact.Unique;
    var set = ViewBag.PageSetting as PageSetting;
}

<table lay-filter="parse-table-demo">
    <thead>
        <tr>
            @foreach (var item in fields)
            {
                var sortUrl = !item.MapField.IsNullOrEmpty() ? page.GetSortUrl(item.MapField) : page.GetSortUrl(item.Name);

                if (item.Type == typeof(DateTime))
                {
                    var width = item.Name.EndsWithIgnoreCase("Date") ? 80 : 134;
                    <th class="text-center" style="min-width:@(width)px;" title="@item.Description"><a href="@Html.Raw(sortUrl)">@item.DisplayName</a></th>
                }
                else
                {
                    <th class="text-center" title="@item.Description"><a href="@Html.Raw(sortUrl)">@item.DisplayName</a></th>
                }
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var entity in Model)
        {
            <tr>
                @if (set.EnableSelect && ukey != null)
                {
                    <td class="text-center"><input type="checkbox" name="keys" value="@entity[ukey.Name]" /></td>
                }
                @foreach (var item in fields)
                {
                    if (item is ListField df)
                    {
                        var name = df.GetDisplayName(entity) ?? df.Header;
                        if (df.DataVisible != null && !df.DataVisible(entity, item))
                        {
                            <td></td>
                        }
                        else if (df.Url.IsNullOrEmpty())
                        {
                            <td class="text-center" title="@df.Title">@name</td>
                        }
                        else
                        {
                            var url = df.GetUrl(entity);
                            if (!df.DataAction.IsNullOrEmpty())
                            {
                                <td class="text-center" title="@df.Title"><a href="@Html.Raw(url)" data-action="@df.DataAction">@name</a></td>
                            }
                            else
                            {
                                @await Html.PartialAsync("_List_Data_Item", new ValueTuple<IEntity, DataField>(entity, item))
                            }
                        }
                    }
                }
                @if (this.Has(PermissionFlags.Detail, PermissionFlags.Update, PermissionFlags.Delete))
                {
                    <td class="text-center">
                        @await Html.PartialAsync("_List_Data_Action", null)
                    </td>
                }
            </tr>
        }
    </tbody>
</table>