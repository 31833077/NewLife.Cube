@using NewLife.Web;
@using XCode;
@using NewLife.Cube.Charts;
@using NewLife;
@using XCode.Configuration;
@{
    Layout = NewLife.Cube.Setting.Current.Layout;

    var fact = ViewBag.Factory as IEntityFactory;
    var page = ViewBag.Page as Pager;
    var set = ViewBag.PageSetting as PageSetting;

    var charts = ViewBag.Charts as ECharts[];
    var charts2 = ViewBag.Charts2 as ECharts[];

    var fields = ViewBag.Fields as FieldCollection;
    var ukey = fact.Unique;
}

@section css{
    <style>
        .layui-fluid {
            padding: 10px;
        }
    </style>
}

<div class="layui-fluid" id="mainpage">
    <div class="layui-row layui-col-space15">
        <div class="layui-col-md12">
            <div class="layui-panel">
                <div class="layui-card-body">
                    <table lay-filter="parse-table-demo">
                        <thead>
                            <tr>
                                @foreach (var item in fields)
                                {
                                    // 要替换的字段
                                    var df = fields.GetField(item.Name);
                                    if (df != null)
                                    {
                                        var header = df.Header ?? df.DisplayName ?? df.Name;

                                        <th lay-data="{field:'@item.Name',title:'@df.HeaderTitle',sort:''}">@header</th>
                                    }
                                    else
                                    {
                                        // 在该字段之前插入的字段
                                        var dfs = fields.GetBeforeFields(item.Name);
                                        foreach (var elm in dfs)
                                        {
                                            df = elm;
                                            var header = df.Header ?? df.DisplayName ?? df.Name;
                                            if (df.HeaderUrl.IsNullOrEmpty())
                                            {
                                                <th lay-data="{field:'@item.Name',title:'@df.HeaderTitle'}">@header</th>
                                            }
                                            else
                                            {
                                                <th lay-data="{field:'@item.Name',title:'@df.HeaderTitle'}">@header</th>
                                            }
                                        }

                                        if (item.Type == typeof(DateTime))
                                        {
                                            var width = item.Name.EndsWithIgnoreCase("Date") ? 96 : 150;
                                            <th lay-data="{field:'@item.Name',minWidth:@width,title:'@item.Description'}">@item.DisplayName</th>
                                        }
                                        else
                                        {
                                            <th lay-data="{field:'@item.Name',title:'@item.Description'}">@item.DisplayName</th>
                                        }

                                        // 在该字段之后插入的字段
                                        dfs = fields.GetAfterFields(item.Name);
                                        foreach (var elm in dfs)
                                        {
                                            df = elm;
                                            var header = df.Header ?? df.DisplayName ?? df.Name;
                                            if (df.HeaderUrl.IsNullOrEmpty())
                                            {
                                                <th lay-data="{field:'@item.Name',title:'@df.HeaderTitle'}">@header</th>
                                            }
                                            else
                                            {
                                                <th lay-data="{field:'@item.Name',title:'@df.HeaderTitle'}">@header</th>
                                            }
                                        }
                                    }
                                }

                                @if (this.Has(PermissionFlags.Detail, PermissionFlags.Update, PermissionFlags.Delete))
                                {
                                    <th lay-data="{toolbar:'#barOpt',minWidth:120,fixed:'right',align:'center'}">操作</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var entity in Model)
                            {
                                <tr>
                                    @foreach (var item in fields)
                                    {
                                        // 要替换的字段
                                        var df = fields.GetField(item.Name);
                                        if (df != null)
                                        {
                                            var name = df.GetDisplayName(entity) ?? entity[item.Name];
                                            if (df.DataVisible != null && !df.DataVisible(entity, item))
                                            {
                                                <td></td>
                                            }
                                            else if (df.Url.IsNullOrEmpty())
                                            {
                                                <td title="@df.Title">@name</td>
                                            }
                                            else
                                            {
                                                var url = df.GetUrl(entity);
                                                if (df.DataAction.IsNullOrEmpty())
                                                {
                                                    <td title="@df.Title">@name</td>
                                                }
                                                else
                                                {
                                                    <td title="@df.Title">@name</td>
                                                }
                                            }
                                        }
                                        else
                                        {
                                            // 在该字段之前插入的字段
                                            var dfs = fields.GetBeforeFields(item.Name);
                                            foreach (var elm in dfs)
                                            {
                                                df = elm;
                                                var name = df.GetDisplayName(entity) ?? df.Header;
                                                if (df.DataVisible != null && !df.DataVisible(entity, item))
                                                {
                                                    <td></td>
                                                }
                                                else if (df.Url.IsNullOrEmpty())
                                                {
                                                    <td title="@df.Title">@name</td>
                                                }
                                                else
                                                {
                                                    var url = df.GetUrl(entity);
                                                    if (df.DataAction.IsNullOrEmpty())
                                                    {
                                                        <td title="@df.Title">@name</td>
                                                    }
                                                    else
                                                    {
                                                        <td title="@df.Title">@name</td>
                                                    }
                                                }
                                            }

                                            @await Html.PartialAsync("_List_Data_Item_layui", new ValueTuple<IEntity, FieldItem>(entity, item))

                                            // 在该字段之后插入的字段
                                            dfs = fields.GetAfterFields(item.Name);
                                            foreach (var elm in dfs)
                                            {
                                                df = elm;
                                                var name = df.GetDisplayName(entity) ?? df.Header;
                                                if (df.DataVisible != null && !df.DataVisible(entity, item))
                                                {
                                                    <td></td>
                                                }
                                                else if (df.Url.IsNullOrEmpty())
                                                {
                                                    <td title="@df.Title">@name</td>
                                                }
                                                else
                                                {
                                                    var url = df.GetUrl(entity);
                                                    if (df.DataAction.IsNullOrEmpty())
                                                    {
                                                        <td title="@df.Title">@name</td>
                                                    }
                                                    else
                                                    {
                                                        <td title="@df.Title">@name</td>
                                                    }
                                                }
                                            }
                                        }
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        layui.use('table', function () {
            var table = layui.table
            $ = layui.$;

            table.init('parse-table-demo', { //转化静态表格
                page: true,
                limit: 20,
                limits: [20, 50, 100],
                size: "sm",
                even: true,
                toolbar: "#toolbarDemo"
            });
        });
    </script>

    <script type="text/html" id="toolbarDemo">
        <div class="layui-btn-container">
            <button class="layui-btn layui-btn-sm" lay-event="getCheckData">获取选中行数据</button>
            <button class="layui-btn layui-btn-sm" lay-event="getCheckLength">获取选中数目</button>
            <button class="layui-btn layui-btn-sm" lay-event="isAll">验证是否全选</button>
        </div>
    </script>

    @* 设置行操作按钮*@
    @if (this.Has(PermissionFlags.Detail, PermissionFlags.Update, PermissionFlags.Delete))
    {
        @foreach (var entity in Model)
        {
            @await Html.PartialAsync("_List_Data_Action_layui", (Object)entity)
            break;
        }
    }
}