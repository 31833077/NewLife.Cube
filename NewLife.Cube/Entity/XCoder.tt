<#@ template language="C#" hostSpecific="true" debug="true" #>
<#@ assembly name="$(ProjectDir)\$(OutputPath)\NewLife.Core.dll" #>
<#@ assembly name="$(ProjectDir)\$(OutputPath)\XCode.dll" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="XCode.Code" #>
<#@ output extension=".log" #>
<#
    // 设置当前工作目录
	PathHelper.BasePath = Host.ResolvePath(".");

    // 加载模型文件，得到数据表
    var option = new BuilderOption();
    var tables = ClassBuilder.LoadModels(null, option, out _);

	// 生成实体类
    EntityBuilder.BuildFile();
	//EntityBuilder.BuildTables(tables, option);

    // 生成简易模型类
    option.Output = @"..\Models\";
    option.ClassNameTemplate = "{name}Model";
    //ClassBuilder.BuildModels(tables, option);

    // 生成简易接口
    option.Output = @"..\Interfaces\";
    option.ClassNameTemplate = null;
    option.BaseClass = null;
    //ClassBuilder.BuildInterfaces(tables, option);

    // 精确控制生成
    /*foreach (var item in tables)
    {
        var builder = new ClassBuilder
        {
            Table = item,
            Option = option.Clone(),
        };
        builder.Execute();
        builder.Save(null, true, false);
    }*/
#>