@using NewLife;
@using NewLife.Web;
@using XCode;
@using XCode.Configuration;
@{
    var entity = Model as IEntity;

    var page = ViewBag.Page as Pager;
    var fields = ViewBag.Fields as IList<FieldItem>;
    var enableSelect = this.EnableSelect();
}
<tr>
    @if (enableSelect)
    {
        <td></td>
    }
    @foreach (var item in fields)
    {
        if (item.IsIdentity)
        {
            <td>总计</td>
        }
        else
        {
            var value = entity[item.Name];
            switch (Type.GetTypeCode(item.Type))
            {
                case TypeCode.Boolean:
                case TypeCode.DateTime:
                    <td></td>
                    break;
                case TypeCode.Decimal:
                    <td>@value</td>
                    break;
                case TypeCode.Single:
                case TypeCode.Double:
                    <td>@value</td>
                    break;
                case TypeCode.Byte:
                case TypeCode.Int16:
                case TypeCode.Int32:
                case TypeCode.Int64:
                case TypeCode.UInt16:
                case TypeCode.UInt32:
                case TypeCode.UInt64:
                    //特殊处理枚举
                    if (item.Type.IsEnum)
                    {
                        <td></td>
                    }
                    else if (item.Name.EqualIgnoreCase("CreateUserID", "UpdateUserID"))
                    {
                        <td></td>
                    }
                    else
                    {
                        <td class="text-right">@Convert.ToInt64(value).ToString("n0")</td>
                    }
                    break;
                case TypeCode.String:
                default:
                    {
                        var val = value;
                        var map = item.Map;
                        if (map != null && map.Provider != null && val + "" != "")
                        {
                            var dic = new RouteValueDictionary();
                            var key = map.Provider.Key;
                            if (!key.IsNullOrEmpty() && item.OriField != null) { dic[key] = entity[item.OriField.Name]; }
                            <td>@Html.ActionLink(value + "", "Edit", map.Provider.EntityType.Name, dic, null)</td>
                        }
                        else if (item.Name.EqualIgnoreCase("CreateIP", "UpdateIP"))
                        {
                            <td title="@((value+"").IPToAddress())">@value</td>
                        }
                        else if (item.Name.EqualIgnoreCase("Remark", "Description"))
                        {
                            //防止内容过长
                            <td style="max-width:600px;overflow:hidden;white-space: nowrap;text-overflow: ellipsis;" title="@value">@value</td>
                        }
                        else
                        {
                            <td>@value</td>
                        }
                    }
                    break;
            }
        }
    }
    @if (this.Has(PermissionFlags.Detail, PermissionFlags.Update, PermissionFlags.Delete))
    {
        <td></td>
    }
</tr>